<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Advanced Edging Trainer</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: linear-gradient(120deg, #111, #333);
      color: #fff;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      min-height: 100vh;
    }
    .app-container {
      background-color: #222;
      border-radius: 20px;
      padding: 20px;
      max-width: 600px;
      width: 100%;
      box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);
      margin: 20px;
    }
    video {
      width: 100%;
      aspect-ratio: 16/9;
      border: 4px solid #00ffff;
      border-radius: 15px;
      margin-bottom: 20px;
    }
    label, select, input {
      display: block;
      margin: 10px auto;
      font-size: 1rem;
      width: 80%;
    }
    input, select {
      padding: 10px;
      border-radius: 10px;
      border: none;
    }
    button {
      margin: 10px 5px;
      padding: 10px 20px;
      border: none;
      border-radius: 10px;
      background: #00ffff;
      color: #000;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s;
    }
    button:hover {
      background: #00cccc;
    }
    .status, .timer, .stroke-count, .recommendation, .result {
      text-align: center;
      margin: 10px 0;
    }
    .result {
      color: #ffd700;
      font-size: 1.1rem;
    }
    .control-buttons {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }
    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background-color: #333;
      padding: 20px;
      border-radius: 10px;
      width: 80%;
      max-width: 400px;
      text-align: center;
    }
    .modal-content h3 {
      color: #00ffff;
    }
    .modal-content p {
      color: #fff;
    }
    .close-btn {
      background-color: #ff6347;
      border: none;
      color: white;
      padding: 10px 20px;
      font-size: 1rem;
      cursor: pointer;
      border-radius: 10px;
      margin-top: 10px;
    }
    .close-btn:hover {
      background-color: #ff4500;
    }
  </style>
</head>
<body>
  <div class="app-container">
    <video id="videoPlayer" controls></video>
    <div id="inputFields">
      <label for="videoFile">Select Video (16:9):</label>
      <input type="file" id="videoFile" accept="video/*" />

      <label for="age">Enter Age:</label>
      <input type="number" id="age" placeholder="Enter your age" min="18" max="100" />

      <label for="stimulation">Stimulation Duration (seconds):</label>
      <input type="number" id="stimulation" value="60" />

      <label for="rest">Rest Duration (seconds):</label>
      <input type="number" id="rest" value="30" />

      <label for="rounds">Number of Rounds:</label>
      <input type="number" id="rounds" value="5" />

      <label for="strokesPerSecond">Strokes Per Second (SPS):</label>
      <input type="number" id="strokesPerSecond" value="3" />
    </div>

    <div class="control-buttons">
      <button onclick="startSession()">Start</button>
      <button onclick="surrender()">Surrender</button>
      <button onclick="skipPhase()">Skip</button>
      <button onclick="restartSession()">Restart</button>
      <button onclick="goHome()">Home</button>
      <button onclick="showInfo()">Info</button> <!-- Info button -->
    </div>

    <div class="status" id="status">Ready</div>
    <div class="timer" id="timer">00:00</div>
    <div class="stroke-count" id="strokeCount">Strokes Completed: 0</div>
    <div class="recommendation" id="recommendation">Recommendation: </div>
    <div class="result" id="finalResult"></div>
  </div>

  <!-- Modal for Info -->
  <div id="infoModal" class="modal">
    <div class="modal-content">
      <h3>Recommended Strokes per Second (SPS) Based on Age</h3>
      <p id="infoContent">Loading info...</p>
      <button class="close-btn" onclick="closeInfo()">Close</button>
    </div>
  </div>

  <script>
    const video = document.getElementById('videoPlayer');
    const fileInput = document.getElementById('videoFile');

    fileInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        video.src = URL.createObjectURL(file);
        video.load();
      }
    });

    let age, stimulationDuration, restDuration, rounds, strokesPerSecond;
    let currentRound = 1;
    let isStimulation = true;
    let currentTimer = 0;
    let interval;
    let strokesCompleted = 0;

    function startSession() {
      age = parseInt(document.getElementById('age').value);
      stimulationDuration = parseInt(document.getElementById('stimulation').value);
      restDuration = parseInt(document.getElementById('rest').value);
      rounds = parseInt(document.getElementById('rounds').value);
      strokesPerSecond = parseInt(document.getElementById('strokesPerSecond').value);

      if (!age || age < 18 || age > 100) return alert("Enter valid age between 18-100");

      strokesCompleted = 0;
      currentRound = 1;
      isStimulation = true;
      document.getElementById('inputFields').style.display = 'none';

      updateRecommendation();
      startPhase(stimulationDuration);
    }

    function updateRecommendation() {
      const maxSPS = age < 25 ? 4 : age < 35 ? 3 : age < 50 ? 2 : 1;
      document.getElementById('recommendation').innerText = `Max Recommended SPS: ${maxSPS}`;
    }

    function startPhase(duration) {
      currentTimer = duration;
      clearInterval(interval);

      if (isStimulation) video.play();
      else video.pause();

      interval = setInterval(() => {
        currentTimer--;
        if (isStimulation) strokesCompleted += strokesPerSecond;
        updateDisplay();

        if (currentTimer <= 0) {
          clearInterval(interval);
          if (isStimulation) {
            isStimulation = false;
            startPhase(restDuration);
          } else {
            currentRound++;
            if (currentRound > rounds) {
              document.getElementById('status').innerText = 'Session Completed!';
              video.pause();
            } else {
              isStimulation = true;
              startPhase(stimulationDuration);
            }
          }
        }
      }, 1000);
    }

    function updateDisplay() {
      const mins = String(Math.floor(currentTimer / 60)).padStart(2, '0');
      const secs = String(currentTimer % 60).padStart(2, '0');
      document.getElementById('timer').innerText = `${mins}:${secs}`;
      document.getElementById('status').innerText = `${isStimulation ? 'Stimulation' : 'Rest'} - Round ${currentRound}/${rounds}`;
      document.getElementById('strokeCount').innerText = `Strokes Completed: ${strokesCompleted}`;
    }

    function surrender() {
      clearInterval(interval);
      video.pause();

      const expectedRounds = age < 20 ? 6 : age < 30 ? 5 : age < 40 ? 4 : age < 50 ? 3 : 2;
      const roundRating = currentRound >= expectedRounds ? 'Strong - Great Job!' : currentRound >= expectedRounds - 1 ? 'Good Effort' : 'Weak - Try Next Time';

      const ageRating = strokesPerSecond >= 3 && age < 30 ? 'Amazing' : strokesPerSecond >= 2 ? 'Decent' : 'Needs Improvement';

      const maxSPS = age < 25 ? 4 : age < 35 ? 3 : age < 50 ? 2 : 1;

      document.getElementById('finalResult').innerHTML = `
        <strong>Surrendered on Round ${currentRound}</strong><br>
        Total Strokes: ${strokesCompleted}<br>
        <strong>Round Challenge:</strong> ${roundRating}<br>
        <strong>Age Challenge:</strong> ${ageRating}<br>
        Age: ${age} | Max Recommended SPS: ${maxSPS}<br>
      `;
    }

    function skipPhase() {
      clearInterval(interval);
      if (isStimulation) {
        // Skip stimulation, go to rest
        isStimulation = false;
        startPhase(restDuration);
      } else {
        // Skip rest, start next round
        isStimulation = true;
        currentRound++;
        if (currentRound > rounds) {
          document.getElementById('status').innerText = 'Session Completed!';
          video.pause();
        } else {
          startPhase(stimulationDuration);
        }
      }
    }

    function restartSession() {
      location.reload();
    }

    function goHome() {
      location.reload(); // This will reload the page and reset everything
    }

    function showInfo() {
      const infoContent = `
        <strong>Age-based Strokes per Second Recommendations:</strong><br><br>
        <strong>18-24 years:</strong> Max 4 SPS<br>
        <strong>25-34 years:</strong> Max 3 SPS<br>
        <strong>35-49 years:</strong> Max 2 SPS<br>
        <strong>50+ years:</strong> Max 1 SPS<br><br>
        Adjust your strokes per second accordingly.<br><br>

        <strong>Realistic Edging Performance Chart (Based on SPS and Age):</strong><br><br>
        <strong>Age: 18-24</strong><br>
        - 150 seconds / 75 seconds rest / 6 rounds<br>
        - 100 seconds / 60 seconds rest / 5 rounds<br>
        - 80 seconds / 60 seconds rest / 4 rounds<br><br>

        <strong>Age: 25-34</strong><br>
        - 140 seconds / 70 seconds rest / 6 rounds<br>
        - 90 seconds / 60 seconds rest / 5 rounds<br>
        - 70 seconds / 50 seconds rest / 4 rounds<br><br>

        <strong>Age: 35-49</strong><br>
        - 120 seconds / 60 seconds rest / 5 rounds<br>
        - 80 seconds / 50 seconds rest / 4 rounds<br>
        - 60 seconds / 40 seconds rest / 3 rounds<br><br>

        <strong>Age: 50+</strong><br>
        - 100 seconds / 50 seconds rest / 4 rounds<br>
        - 70 seconds / 40 seconds rest / 3 rounds<br>
        - 50 seconds / 30 seconds rest / 2 rounds<br><br>
      `;
      document.getElementById('infoContent').innerHTML = infoContent;
      document.getElementById('infoModal').style.display = 'flex';
    }

    function closeInfo() {
      document.getElementById('infoModal').style.display = 'none';
    }
  </script>
</body>
</html>
